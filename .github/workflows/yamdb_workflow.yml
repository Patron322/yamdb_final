name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |    
        python -m pip install --upgrade pip        
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        cd api_yamdb     
        pip install -r requirements.txt 

    - name: Test with flake8 and django tests
      run: |      
        python -m flake8      
        pytest
  
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          push: true
          tags: patron322/yamdb_final:latest
          file: ./api_yamdb/Dockerfile
  
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ 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
2cUazVZht9WJg5KRE6CoqOPAwnY= }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm web
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
